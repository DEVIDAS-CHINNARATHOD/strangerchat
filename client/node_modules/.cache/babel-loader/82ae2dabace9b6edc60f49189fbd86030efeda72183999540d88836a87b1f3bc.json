{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Chat\\\\strengerchat\\\\client\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [password, setPassword] = useState('');\n  const [users, setUsers] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [selectedConnection, setSelectedConnection] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [stats, setStats] = useState({\n    activeUsers: 0,\n    activeConnections: 0,\n    totalConnections: 0,\n    lobbyUsers: 0,\n    randomQueue: 0\n  });\n\n  // Refs for remote video streams\n  const videoRefs = useRef({});\n  useEffect(() => {\n    // Set up socket event listeners for admin\n    socket.on('admin-data', handleAdminData);\n    socket.on('admin-users-update', handleUsersUpdate);\n    socket.on('admin-connection-update', handleConnectionUpdate);\n    socket.on('admin-message-update', handleMessageUpdate);\n    socket.on('admin-chat-history', handleChatHistory);\n    socket.on('admin-login-failed', handleLoginFailed);\n\n    // Clean up when component unmounts\n    return () => {\n      socket.off('admin-data', handleAdminData);\n      socket.off('admin-users-update', handleUsersUpdate);\n      socket.off('admin-connection-update', handleConnectionUpdate);\n      socket.off('admin-message-update', handleMessageUpdate);\n      socket.off('admin-chat-history', handleChatHistory);\n      socket.off('admin-login-failed', handleLoginFailed);\n    };\n  }, []);\n\n  // Handle admin data received after login\n  const handleAdminData = data => {\n    setUsers(data.users || []);\n    setConnections(data.connections || []);\n    setIsLoggedIn(true);\n  };\n\n  // Handle updates to user list\n  const handleUsersUpdate = updatedUsers => {\n    setUsers(updatedUsers || []);\n  };\n\n  // Handle updates to connections\n  const handleConnectionUpdate = data => {\n    setConnections(data.connections || []);\n    if (data.users) {\n      setUsers(data.users);\n    }\n  };\n\n  // Handle new messages in monitored chats\n  const handleMessageUpdate = data => {\n    if (selectedConnection && selectedConnection.id === data.connectionId) {\n      setChatMessages(data.messages || []);\n    }\n  };\n\n  // Handle chat history response\n  const handleChatHistory = data => {\n    setChatMessages(data.messages || []);\n  };\n\n  // Handle login failure\n  const handleLoginFailed = () => {\n    alert('Admin login failed. Incorrect password.');\n  };\n\n  // Handle login form submission\n  const handleLogin = e => {\n    e.preventDefault();\n    socket.emit('admin-login', password);\n  };\n\n  // Select a connection to monitor\n  const selectConnection = connection => {\n    setSelectedConnection(connection);\n    setChatMessages([]);\n    socket.emit('admin-get-chat', connection.id);\n  };\n\n  // Request WebRTC streams for a connection\n  const requestStreams = connection => {\n    // In a real implementation, you would need to modify the server\n    // to relay WebRTC streams to the admin. This is a placeholder.\n    console.log('Requesting streams for connection:', connection.id);\n  };\n\n  // Fetch updated stats\n  const fetchStats = async () => {\n    try {\n      const response = await fetch('/api/admin/stats', {\n        headers: {\n          'X-API-Key': password\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setStats(data);\n      }\n    } catch (error) {\n      console.error('Error fetching admin stats:', error);\n    }\n  };\n\n  // Refresh all data\n  const refreshData = () => {\n    socket.emit('admin-login', password);\n    fetchStats();\n  };\n\n  // Login form\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Admin Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Admin dashboard\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"StrengerChat Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshData,\n          children: \"Refresh Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.activeUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Active Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.activeConnections\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Active Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.lobbyUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"In Lobby\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.randomQueue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Waiting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.totalConnections\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Active Users (\", users.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-list\",\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `admin-user ${user.status}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-id\",\n              children: [user.id.substring(0, 8), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-nickname\",\n              children: user.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-status\",\n              children: user.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-time\",\n              children: new Date(user.connectionTime).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-connections\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-list\",\n          children: connections.filter(conn => !conn.endTime).map(connection => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `admin-connection ${selectedConnection && selectedConnection.id === connection.id ? 'selected' : ''}`,\n            onClick: () => selectConnection(connection),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-id\",\n              children: [connection.id.substring(0, 10), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-type\",\n              children: connection.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-time\",\n              children: new Date(connection.startTime).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"monitor-button\",\n              onClick: e => {\n                e.stopPropagation();\n                requestStreams(connection);\n              },\n              children: \"Monitor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, connection.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ended Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-list ended\",\n          children: connections.filter(conn => conn.endTime).map(connection => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `admin-connection ended ${selectedConnection && selectedConnection.id === connection.id ? 'selected' : ''}`,\n            onClick: () => selectConnection(connection),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-id\",\n              children: [connection.id.substring(0, 10), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-type\",\n              children: connection.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connection-time\",\n              children: [new Date(connection.startTime).toLocaleTimeString(), \" -\", new Date(connection.endTime).toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)]\n          }, connection.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), selectedConnection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-monitor\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Monitoring Connection: \", selectedConnection.id.substring(0, 10), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-streams\",\n          children: selectedConnection.users.map(userId => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stream-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"User: \", userId.substring(0, 8), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: el => {\n                if (el) videoRefs.current[userId] = el;\n              },\n              className: \"admin-video\",\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Chat Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.from === selectedConnection.users[0] ? 'user-1' : 'user-2'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-sender\",\n                children: [message.from.substring(0, 8), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-timestamp\",\n                children: new Date(message.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"DNUel9fHYODe21qeCk+kK8j8avE=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socket","jsxDEV","_jsxDEV","AdminPanel","_s","isLoggedIn","setIsLoggedIn","password","setPassword","users","setUsers","connections","setConnections","selectedConnection","setSelectedConnection","chatMessages","setChatMessages","stats","setStats","activeUsers","activeConnections","totalConnections","lobbyUsers","randomQueue","videoRefs","on","handleAdminData","handleUsersUpdate","handleConnectionUpdate","handleMessageUpdate","handleChatHistory","handleLoginFailed","off","data","updatedUsers","id","connectionId","messages","alert","handleLogin","e","preventDefault","emit","selectConnection","connection","requestStreams","console","log","fetchStats","response","fetch","headers","ok","json","error","refreshData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","length","map","user","status","substring","nickname","Date","connectionTime","toLocaleTimeString","filter","conn","endTime","startTime","stopPropagation","userId","ref","el","current","autoPlay","playsInline","message","index","from","content","timestamp","_c","$RefreshReg$"],"sources":["D:/Project Chat/strengerchat/client/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport socket from '../socket';\r\n\r\nconst AdminPanel = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [connections, setConnections] = useState([]);\r\n  const [selectedConnection, setSelectedConnection] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    activeUsers: 0,\r\n    activeConnections: 0,\r\n    totalConnections: 0,\r\n    lobbyUsers: 0,\r\n    randomQueue: 0\r\n  });\r\n  \r\n  // Refs for remote video streams\r\n  const videoRefs = useRef({});\r\n  \r\n  useEffect(() => {\r\n    // Set up socket event listeners for admin\r\n    socket.on('admin-data', handleAdminData);\r\n    socket.on('admin-users-update', handleUsersUpdate);\r\n    socket.on('admin-connection-update', handleConnectionUpdate);\r\n    socket.on('admin-message-update', handleMessageUpdate);\r\n    socket.on('admin-chat-history', handleChatHistory);\r\n    socket.on('admin-login-failed', handleLoginFailed);\r\n    \r\n    // Clean up when component unmounts\r\n    return () => {\r\n      socket.off('admin-data', handleAdminData);\r\n      socket.off('admin-users-update', handleUsersUpdate);\r\n      socket.off('admin-connection-update', handleConnectionUpdate);\r\n      socket.off('admin-message-update', handleMessageUpdate);\r\n      socket.off('admin-chat-history', handleChatHistory);\r\n      socket.off('admin-login-failed', handleLoginFailed);\r\n    };\r\n  }, []);\r\n  \r\n  // Handle admin data received after login\r\n  const handleAdminData = (data) => {\r\n    setUsers(data.users || []);\r\n    setConnections(data.connections || []);\r\n    setIsLoggedIn(true);\r\n  };\r\n  \r\n  // Handle updates to user list\r\n  const handleUsersUpdate = (updatedUsers) => {\r\n    setUsers(updatedUsers || []);\r\n  };\r\n  \r\n  // Handle updates to connections\r\n  const handleConnectionUpdate = (data) => {\r\n    setConnections(data.connections || []);\r\n    if (data.users) {\r\n      setUsers(data.users);\r\n    }\r\n  };\r\n  \r\n  // Handle new messages in monitored chats\r\n  const handleMessageUpdate = (data) => {\r\n    if (selectedConnection && selectedConnection.id === data.connectionId) {\r\n      setChatMessages(data.messages || []);\r\n    }\r\n  };\r\n  \r\n  // Handle chat history response\r\n  const handleChatHistory = (data) => {\r\n    setChatMessages(data.messages || []);\r\n  };\r\n  \r\n  // Handle login failure\r\n  const handleLoginFailed = () => {\r\n    alert('Admin login failed. Incorrect password.');\r\n  };\r\n  \r\n  // Handle login form submission\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('admin-login', password);\r\n  };\r\n  \r\n  // Select a connection to monitor\r\n  const selectConnection = (connection) => {\r\n    setSelectedConnection(connection);\r\n    setChatMessages([]);\r\n    socket.emit('admin-get-chat', connection.id);\r\n  };\r\n  \r\n  // Request WebRTC streams for a connection\r\n  const requestStreams = (connection) => {\r\n    // In a real implementation, you would need to modify the server\r\n    // to relay WebRTC streams to the admin. This is a placeholder.\r\n    console.log('Requesting streams for connection:', connection.id);\r\n  };\r\n  \r\n  // Fetch updated stats\r\n  const fetchStats = async () => {\r\n    try {\r\n      const response = await fetch('/api/admin/stats', {\r\n        headers: {\r\n          'X-API-Key': password\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setStats(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching admin stats:', error);\r\n    }\r\n  };\r\n  \r\n  // Refresh all data\r\n  const refreshData = () => {\r\n    socket.emit('admin-login', password);\r\n    fetchStats();\r\n  };\r\n  \r\n  // Login form\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div className=\"admin-login\">\r\n        <h2>Admin Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Admin Password\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Admin dashboard\r\n  return (\r\n    <div className=\"admin-panel\">\r\n      <div className=\"admin-header\">\r\n        <h2>StrengerChat Admin Panel</h2>\r\n        <div className=\"admin-controls\">\r\n          <button onClick={refreshData}>Refresh Data</button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"admin-stats\">\r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{stats.activeUsers}</div>\r\n          <div className=\"stat-label\">Active Users</div>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{stats.activeConnections}</div>\r\n          <div className=\"stat-label\">Active Chats</div>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{stats.lobbyUsers}</div>\r\n          <div className=\"stat-label\">In Lobby</div>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{stats.randomQueue}</div>\r\n          <div className=\"stat-label\">Waiting</div>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{stats.totalConnections}</div>\r\n          <div className=\"stat-label\">Total Connections</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"admin-content\">\r\n        <div className=\"admin-users\">\r\n          <h3>Active Users ({users.length})</h3>\r\n          <div className=\"user-list\">\r\n            {users.map(user => (\r\n              <div key={user.id} className={`admin-user ${user.status}`}>\r\n                <div className=\"user-id\">{user.id.substring(0, 8)}...</div>\r\n                <div className=\"user-nickname\">{user.nickname}</div>\r\n                <div className=\"user-status\">{user.status}</div>\r\n                <div className=\"user-time\">\r\n                  {new Date(user.connectionTime).toLocaleTimeString()}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"admin-connections\">\r\n          <h3>Active Connections</h3>\r\n          <div className=\"connection-list\">\r\n            {connections\r\n              .filter(conn => !conn.endTime)\r\n              .map(connection => (\r\n                <div \r\n                  key={connection.id} \r\n                  className={`admin-connection ${selectedConnection && selectedConnection.id === connection.id ? 'selected' : ''}`}\r\n                  onClick={() => selectConnection(connection)}\r\n                >\r\n                  <div className=\"connection-id\">{connection.id.substring(0, 10)}...</div>\r\n                  <div className=\"connection-type\">{connection.type}</div>\r\n                  <div className=\"connection-time\">\r\n                    {new Date(connection.startTime).toLocaleTimeString()}\r\n                  </div>\r\n                  <button \r\n                    className=\"monitor-button\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      requestStreams(connection);\r\n                    }}\r\n                  >\r\n                    Monitor\r\n                  </button>\r\n                </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <h3>Ended Connections</h3>\r\n          <div className=\"connection-list ended\">\r\n            {connections\r\n              .filter(conn => conn.endTime)\r\n              .map(connection => (\r\n                <div \r\n                  key={connection.id} \r\n                  className={`admin-connection ended ${selectedConnection && selectedConnection.id === connection.id ? 'selected' : ''}`}\r\n                  onClick={() => selectConnection(connection)}\r\n                >\r\n                  <div className=\"connection-id\">{connection.id.substring(0, 10)}...</div>\r\n                  <div className=\"connection-type\">{connection.type}</div>\r\n                  <div className=\"connection-time\">\r\n                    {new Date(connection.startTime).toLocaleTimeString()} - \r\n                    {new Date(connection.endTime).toLocaleTimeString()}\r\n                  </div>\r\n                </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {selectedConnection && (\r\n          <div className=\"admin-monitor\">\r\n            <h3>Monitoring Connection: {selectedConnection.id.substring(0, 10)}...</h3>\r\n            \r\n            <div className=\"video-streams\">\r\n              {selectedConnection.users.map(userId => (\r\n                <div key={userId} className=\"stream-container\">\r\n                  <h4>User: {userId.substring(0, 8)}...</h4>\r\n                  <video\r\n                    ref={el => { if (el) videoRefs.current[userId] = el; }}\r\n                    className=\"admin-video\"\r\n                    autoPlay\r\n                    playsInline\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"chat-messages\">\r\n              <h4>Chat Messages</h4>\r\n              <div className=\"messages-container\">\r\n                {chatMessages.map((message, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className={`message ${message.from === selectedConnection.users[0] ? 'user-1' : 'user-2'}`}\r\n                  >\r\n                    <div className=\"message-sender\">\r\n                      {message.from.substring(0, 8)}...\r\n                    </div>\r\n                    <div className=\"message-content\">{message.content}</div>\r\n                    <div className=\"message-timestamp\">\r\n                      {new Date(message.timestamp).toLocaleTimeString()}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}