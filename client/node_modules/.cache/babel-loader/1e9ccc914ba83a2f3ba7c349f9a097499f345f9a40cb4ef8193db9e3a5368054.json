{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Chat\\\\strengerchat\\\\client\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport VideoChat from './VideoChat';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  partnerId,\n  onEndChat,\n  mode\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Set up message event listener\n    socket.on('message', handleReceiveMessage);\n\n    // Clean up when component unmounts\n    return () => {\n      socket.off('message', handleReceiveMessage);\n    };\n  }, [partnerId]);\n\n  // Scroll to bottom of messages when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleReceiveMessage = data => {\n    setMessages(prevMessages => [...prevMessages, {\n      content: data.content,\n      fromSelf: false,\n      timestamp: data.timestamp || new Date().toISOString()\n    }]);\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (inputMessage.trim() === '') return;\n\n    // Send message to server\n    socket.emit('message', {\n      target: partnerId,\n      content: inputMessage\n    });\n\n    // Add message to local state\n    setMessages(prevMessages => [...prevMessages, {\n      content: inputMessage,\n      fromSelf: true,\n      timestamp: new Date().toISOString()\n    }]);\n\n    // Clear input field\n    setInputMessage('');\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleEndChat = () => {\n    if (onEndChat) {\n      onEndChat();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(VideoChat, {\n        partnerId: partnerId,\n        onEndChat: handleEndChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.fromSelf ? 'self' : 'other'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-timestamp\",\n              children: new Date(message.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"message-input-form\",\n          onSubmit: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: inputMessage.trim() === '',\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-mode\",\n        children: [\"Mode: \", mode === 'random' ? 'Random Chat' : 'Lobby Chat']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"bna9FhZll7Pdq2ad2wTm7RkywhQ=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","VideoChat","socket","jsxDEV","_jsxDEV","ChatRoom","partnerId","onEndChat","mode","_s","messages","setMessages","inputMessage","setInputMessage","messagesEndRef","on","handleReceiveMessage","off","scrollToBottom","data","prevMessages","content","fromSelf","timestamp","Date","toISOString","handleSendMessage","e","preventDefault","trim","emit","target","_messagesEndRef$curre","current","scrollIntoView","behavior","handleEndChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["D:/Project Chat/strengerchat/client/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport VideoChat from './VideoChat';\r\nimport socket from '../socket';\r\n\r\nconst ChatRoom = ({ partnerId, onEndChat, mode }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    // Set up message event listener\r\n    socket.on('message', handleReceiveMessage);\r\n    \r\n    // Clean up when component unmounts\r\n    return () => {\r\n      socket.off('message', handleReceiveMessage);\r\n    };\r\n  }, [partnerId]);\r\n  \r\n  // Scroll to bottom of messages when messages change\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n  \r\n  const handleReceiveMessage = (data) => {\r\n    setMessages(prevMessages => [\r\n      ...prevMessages,\r\n      {\r\n        content: data.content,\r\n        fromSelf: false,\r\n        timestamp: data.timestamp || new Date().toISOString()\r\n      }\r\n    ]);\r\n  };\r\n  \r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (inputMessage.trim() === '') return;\r\n    \r\n    // Send message to server\r\n    socket.emit('message', {\r\n      target: partnerId,\r\n      content: inputMessage\r\n    });\r\n    \r\n    // Add message to local state\r\n    setMessages(prevMessages => [\r\n      ...prevMessages,\r\n      {\r\n        content: inputMessage,\r\n        fromSelf: true,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    ]);\r\n    \r\n    // Clear input field\r\n    setInputMessage('');\r\n  };\r\n  \r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  \r\n  const handleEndChat = () => {\r\n    if (onEndChat) {\r\n      onEndChat();\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"chat-room\">\r\n      <div className=\"chat-container\">\r\n        {/* Video chat component */}\r\n        <VideoChat \r\n          partnerId={partnerId} \r\n          onEndChat={handleEndChat} \r\n        />\r\n        \r\n        {/* Text chat */}\r\n        <div className=\"text-chat\">\r\n          <div className=\"messages-container\">\r\n            {messages.map((message, index) => (\r\n              <div \r\n                key={index} \r\n                className={`message ${message.fromSelf ? 'self' : 'other'}`}\r\n              >\r\n                <div className=\"message-content\">{message.content}</div>\r\n                <div className=\"message-timestamp\">\r\n                  {new Date(message.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          \r\n          <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n            <input\r\n              type=\"text\"\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              placeholder=\"Type a message...\"\r\n              className=\"message-input\"\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              className=\"send-button\"\r\n              disabled={inputMessage.trim() === ''}\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chat-info\">\r\n        <div className=\"chat-mode\">\r\n          Mode: {mode === 'random' ? 'Random Chat' : 'Lobby Chat'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}