{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Chat\\\\strengerchat\\\\client\\\\src\\\\components\\\\VideoChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoChat = ({\n  partnerId,\n  onEndChat\n}) => {\n  _s();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(true);\n\n  // ICE servers configuration\n  const iceServers = {\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }, {\n      urls: 'stun:stun1.l.google.com:19302'\n    }]\n  };\n  useEffect(() => {\n    // Start the video chat immediately when component mounts\n    startVideoChat();\n\n    // Set up WebRTC signaling event listeners\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleIceCandidate);\n    socket.on('user-disconnected', handleUserDisconnected);\n    socket.on('chat-ended', handleChatEnded);\n\n    // Clean up when component unmounts\n    return () => {\n      stopVideoChat();\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleIceCandidate);\n      socket.off('user-disconnected', handleUserDisconnected);\n      socket.off('chat-ended', handleChatEnded);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [partnerId]);\n  const startVideoChat = async () => {\n    try {\n      // Get local media stream (camera and microphone)\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n\n      // Save stream reference and display in local video element\n      localStreamRef.current = stream;\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // Create RTCPeerConnection\n      createPeerConnection();\n\n      // Add local tracks to the peer connection\n      stream.getTracks().forEach(track => {\n        peerConnectionRef.current.addTrack(track, stream);\n      });\n\n      // If we have a partner ID, we should initiate the call\n      if (partnerId) {\n        createOffer();\n      }\n      setIsConnecting(false);\n    } catch (error) {\n      console.error('Error starting video chat:', error);\n      setIsConnecting(false);\n    }\n  };\n  const createPeerConnection = () => {\n    // Create new RTCPeerConnection\n    peerConnectionRef.current = new RTCPeerConnection(iceServers);\n\n    // Handle ICE candidate events\n    peerConnectionRef.current.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', {\n          target: partnerId,\n          candidate: event.candidate\n        });\n      }\n    };\n\n    // Handle connection state changes\n    peerConnectionRef.current.onconnectionstatechange = () => {\n      // Add null check before accessing connectionState\n      if (peerConnectionRef.current) {\n        console.log('Connection state:', peerConnectionRef.current.connectionState);\n      }\n    };\n\n    // Handle receiving remote tracks\n    peerConnectionRef.current.ontrack = event => {\n      if (remoteVideoRef.current && event.streams[0]) {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      }\n    };\n  };\n  const createOffer = async () => {\n    try {\n      // Create offer\n      const offer = await peerConnectionRef.current.createOffer();\n      // Set local description\n      await peerConnectionRef.current.setLocalDescription(offer);\n      // Send offer to peer via signaling server\n      socket.emit('offer', {\n        target: partnerId,\n        offer: offer\n      });\n    } catch (error) {\n      console.error('Error creating offer:', error);\n    }\n  };\n  const handleOffer = async data => {\n    try {\n      // Create peer connection if it doesn't exist\n      if (!peerConnectionRef.current) {\n        createPeerConnection();\n      }\n\n      // Set remote description from received offer\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n\n      // Create answer\n      const answer = await peerConnectionRef.current.createAnswer();\n\n      // Set local description\n      await peerConnectionRef.current.setLocalDescription(answer);\n\n      // Send answer to peer via signaling server\n      socket.emit('answer', {\n        target: data.from,\n        answer: answer\n      });\n    } catch (error) {\n      console.error('Error handling offer:', error);\n    }\n  };\n  const handleAnswer = async data => {\n    try {\n      // Set remote description from received answer\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n    } catch (error) {\n      console.error('Error handling answer:', error);\n    }\n  };\n  const handleIceCandidate = async data => {\n    try {\n      // Add received ICE candidate\n      if (peerConnectionRef.current) {\n        await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    } catch (error) {\n      console.error('Error handling ICE candidate:', error);\n    }\n  };\n  const handleUserDisconnected = userId => {\n    if (userId === partnerId) {\n      // Partner disconnected, end chat\n      handleChatEnded();\n    }\n  };\n  const handleChatEnded = () => {\n    // Notify parent component that chat has ended\n    if (onEndChat) {\n      onEndChat();\n    }\n  };\n  const stopVideoChat = () => {\n    // Stop all tracks in local stream\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n\n    // Close peer connection\n    if (peerConnectionRef.current) {\n      peerConnectionRef.current.close();\n      peerConnectionRef.current = null;\n    }\n  };\n  const toggleMute = () => {\n    if (localStreamRef.current) {\n      const audioTracks = localStreamRef.current.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  const endChat = () => {\n    // Send end chat signal to partner\n    socket.emit('end-chat', partnerId);\n    // End chat locally\n    handleChatEnded();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remote-video-container\",\n        children: [isConnecting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connecting-message\",\n          children: \"Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          className: \"remote-video\",\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"local-video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          className: \"local-video\",\n          autoPlay: true,\n          playsInline: true,\n          muted: true // Always mute local video to prevent feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-button ${isMuted ? 'muted' : ''}`,\n        onClick: toggleMute,\n        children: isMuted ? 'Unmute' : 'Mute'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button end-button\",\n        onClick: endChat,\n        children: \"End Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button next-button\",\n        onClick: endChat // Same as end chat for now\n        ,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChat, \"663cxQZXkSsSYXQ7pBb7S6CNbU8=\");\n_c = VideoChat;\nexport default VideoChat;\nvar _c;\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","socket","jsxDEV","_jsxDEV","VideoChat","partnerId","onEndChat","_s","localVideoRef","remoteVideoRef","peerConnectionRef","localStreamRef","isMuted","setIsMuted","isConnecting","setIsConnecting","iceServers","urls","startVideoChat","on","handleOffer","handleAnswer","handleIceCandidate","handleUserDisconnected","handleChatEnded","stopVideoChat","off","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","createPeerConnection","getTracks","forEach","track","addTrack","createOffer","error","console","RTCPeerConnection","onicecandidate","event","candidate","emit","target","onconnectionstatechange","log","connectionState","ontrack","streams","offer","setLocalDescription","data","setRemoteDescription","RTCSessionDescription","answer","createAnswer","from","addIceCandidate","RTCIceCandidate","userId","stop","close","toggleMute","audioTracks","getAudioTracks","enabled","endChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","onClick","_c","$RefreshReg$"],"sources":["D:/Project Chat/strengerchat/client/src/components/VideoChat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport socket from '../socket';\r\n\r\nconst VideoChat = ({ partnerId, onEndChat }) => {\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n  const peerConnectionRef = useRef(null);\r\n  const localStreamRef = useRef(null);\r\n  \r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isConnecting, setIsConnecting] = useState(true);\r\n  \r\n  // ICE servers configuration\r\n  const iceServers = {\r\n    iceServers: [\r\n      { urls: 'stun:stun.l.google.com:19302' },\r\n      { urls: 'stun:stun1.l.google.com:19302' },\r\n    ],\r\n  };\r\n  \r\n  useEffect(() => {\r\n    // Start the video chat immediately when component mounts\r\n    startVideoChat();\r\n    \r\n    // Set up WebRTC signaling event listeners\r\n    socket.on('offer', handleOffer);\r\n    socket.on('answer', handleAnswer);\r\n    socket.on('ice-candidate', handleIceCandidate);\r\n    socket.on('user-disconnected', handleUserDisconnected);\r\n    socket.on('chat-ended', handleChatEnded);\r\n    \r\n    // Clean up when component unmounts\r\n    return () => {\r\n      stopVideoChat();\r\n      socket.off('offer', handleOffer);\r\n      socket.off('answer', handleAnswer);\r\n      socket.off('ice-candidate', handleIceCandidate);\r\n      socket.off('user-disconnected', handleUserDisconnected);\r\n      socket.off('chat-ended', handleChatEnded);\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [partnerId]);\r\n  \r\n  const startVideoChat = async () => {\r\n    try {\r\n      // Get local media stream (camera and microphone)\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: true, \r\n        audio: true \r\n      });\r\n      \r\n      // Save stream reference and display in local video element\r\n      localStreamRef.current = stream;\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = stream;\r\n      }\r\n      \r\n      // Create RTCPeerConnection\r\n      createPeerConnection();\r\n      \r\n      // Add local tracks to the peer connection\r\n      stream.getTracks().forEach(track => {\r\n        peerConnectionRef.current.addTrack(track, stream);\r\n      });\r\n      \r\n      // If we have a partner ID, we should initiate the call\r\n      if (partnerId) {\r\n        createOffer();\r\n      }\r\n      \r\n      setIsConnecting(false);\r\n    } catch (error) {\r\n      console.error('Error starting video chat:', error);\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n  \r\n  const createPeerConnection = () => {\r\n    // Create new RTCPeerConnection\r\n    peerConnectionRef.current = new RTCPeerConnection(iceServers);\r\n    \r\n    // Handle ICE candidate events\r\n    peerConnectionRef.current.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit('ice-candidate', {\r\n          target: partnerId,\r\n          candidate: event.candidate,\r\n        });\r\n      }\r\n    };\r\n    \r\n    // Handle connection state changes\r\n    peerConnectionRef.current.onconnectionstatechange = () => {\r\n      // Add null check before accessing connectionState\r\n      if (peerConnectionRef.current) {\r\n        console.log('Connection state:', peerConnectionRef.current.connectionState);\r\n      }\r\n    };\r\n    \r\n    // Handle receiving remote tracks\r\n    peerConnectionRef.current.ontrack = (event) => {\r\n      if (remoteVideoRef.current && event.streams[0]) {\r\n        remoteVideoRef.current.srcObject = event.streams[0];\r\n      }\r\n    };\r\n  };\r\n  \r\n  const createOffer = async () => {\r\n    try {\r\n      // Create offer\r\n      const offer = await peerConnectionRef.current.createOffer();\r\n      // Set local description\r\n      await peerConnectionRef.current.setLocalDescription(offer);\r\n      // Send offer to peer via signaling server\r\n      socket.emit('offer', {\r\n        target: partnerId,\r\n        offer: offer,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating offer:', error);\r\n    }\r\n  };\r\n  \r\n  const handleOffer = async (data) => {\r\n    try {\r\n      // Create peer connection if it doesn't exist\r\n      if (!peerConnectionRef.current) {\r\n        createPeerConnection();\r\n      }\r\n      \r\n      // Set remote description from received offer\r\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n      \r\n      // Create answer\r\n      const answer = await peerConnectionRef.current.createAnswer();\r\n      \r\n      // Set local description\r\n      await peerConnectionRef.current.setLocalDescription(answer);\r\n      \r\n      // Send answer to peer via signaling server\r\n      socket.emit('answer', {\r\n        target: data.from,\r\n        answer: answer,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error handling offer:', error);\r\n    }\r\n  };\r\n  \r\n  const handleAnswer = async (data) => {\r\n    try {\r\n      // Set remote description from received answer\r\n      await peerConnectionRef.current.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n    } catch (error) {\r\n      console.error('Error handling answer:', error);\r\n    }\r\n  };\r\n  \r\n  const handleIceCandidate = async (data) => {\r\n    try {\r\n      // Add received ICE candidate\r\n      if (peerConnectionRef.current) {\r\n        await peerConnectionRef.current.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error handling ICE candidate:', error);\r\n    }\r\n  };\r\n  \r\n  const handleUserDisconnected = (userId) => {\r\n    if (userId === partnerId) {\r\n      // Partner disconnected, end chat\r\n      handleChatEnded();\r\n    }\r\n  };\r\n  \r\n  const handleChatEnded = () => {\r\n    // Notify parent component that chat has ended\r\n    if (onEndChat) {\r\n      onEndChat();\r\n    }\r\n  };\r\n  \r\n  const stopVideoChat = () => {\r\n    // Stop all tracks in local stream\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    \r\n    // Close peer connection\r\n    if (peerConnectionRef.current) {\r\n      peerConnectionRef.current.close();\r\n      peerConnectionRef.current = null;\r\n    }\r\n  };\r\n  \r\n  const toggleMute = () => {\r\n    if (localStreamRef.current) {\r\n      const audioTracks = localStreamRef.current.getAudioTracks();\r\n      audioTracks.forEach(track => {\r\n        track.enabled = !track.enabled;\r\n      });\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n  \r\n  const endChat = () => {\r\n    // Send end chat signal to partner\r\n    socket.emit('end-chat', partnerId);\r\n    // End chat locally\r\n    handleChatEnded();\r\n  };\r\n  \r\n  return (\r\n    <div className=\"video-chat-container\">\r\n      <div className=\"video-grid\">\r\n        {/* Remote video (larger) */}\r\n        <div className=\"remote-video-container\">\r\n          {isConnecting && <div className=\"connecting-message\">Connecting...</div>}\r\n          <video \r\n            ref={remoteVideoRef} \r\n            className=\"remote-video\" \r\n            autoPlay \r\n            playsInline\r\n          />\r\n        </div>\r\n        \r\n        {/* Local video (smaller, picture-in-picture) */}\r\n        <div className=\"local-video-container\">\r\n          <video \r\n            ref={localVideoRef} \r\n            className=\"local-video\" \r\n            autoPlay \r\n            playsInline \r\n            muted // Always mute local video to prevent feedback\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Video controls */}\r\n      <div className=\"video-controls\">\r\n        <button \r\n          className={`control-button ${isMuted ? 'muted' : ''}`}\r\n          onClick={toggleMute}\r\n        >\r\n          {isMuted ? 'Unmute' : 'Mute'}\r\n        </button>\r\n        \r\n        <button \r\n          className=\"control-button end-button\"\r\n          onClick={endChat}\r\n        >\r\n          End Chat\r\n        </button>\r\n        \r\n        <button \r\n          className=\"control-button next-button\"\r\n          onClick={endChat} // Same as end chat for now\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoChat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}